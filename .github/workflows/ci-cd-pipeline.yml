name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Test with Bun
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install
        
      - name: Install JSDOM (required for tests)
        run: bun add -d jsdom

      - name: Install Testing Library
        run: bun add -d @testing-library/react @testing-library/jest-dom

      - name: Run tests
        run: bun test
        
      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            test-results
            coverage
          retention-days: 5

  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm install
        
      - name: Run ESLint
        run: npx eslint . --ext .js,.jsx,.ts,.tsx
        continue-on-error: true
        
      - name: Check formatting with Prettier
        run: npx prettier --check .
        continue-on-error: true

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [test, lint]
    # Only run on main branch and not pull requests
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=sha,format=long
            latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          
      # Temp fix for https://github.com/docker/build-push-action/issues/252
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
          
  deploy:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: build-and-push
    # Only run on main branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: development
    steps:
      - name: Deploy to development environment
        run: echo "Deploying to development environment"
        # Replace with your actual deployment steps
        # For example:
        # - name: Install SSH key
        #   uses: webfactory/ssh-agent@v0.7.0
        #   with:
        #     ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
        #
        # - name: Deploy via SSH
        #   run: ssh user@your-server.com 'cd /path/to/app && docker-compose pull && docker-compose up -d'